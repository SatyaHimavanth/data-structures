void specific_insert()
{
int val,pos,i;
printf("Enter value to be inserted :");
scanf("%d",&val);
printf("Note : position of nodes starts from 1\n");
printf("Enter position :");
scanf("%d",&pos);
newnode=(struct node*)malloc(sizeof(struct node));
newnode->data=val;
temp=head;
for(i=0;i<pos-2;i++)
{
temp=temp->next;
}
newnode->next=temp->next;
newnode->prev=temp;
temp->next=newnode;
newnode->next->prev=newnode;
}

void delete_beg()
{
temp=head;
head=temp->next;
temp->next->prev=NULL;
temp->next=NULL;
}

void delete_end()
{
temp=tail;
tail=temp->prev;
tail->next=NULL;
temp->prev=NULL;
}

void specific_delete()
{
int pos,i;
struct node *temp1;
printf("Enter position :");
scanf("%d",&pos);
temp=head;
for(i=0;i<pos-2;i++)
{
temp=temp->next;
}
temp1=temp->next;
temp->next=temp1->next;
temp1->next->prev=temp;
temp1=NULL;
}

void count()
{
int c=0;
temp=head;
while(temp!=NULL)
{
c=c+1;
temp=temp->next;
}
printf("no.of nodes are(or)is :%d\n",c);
}

void reverse()
{
temp=tail;
while(temp!=NULL)
{
printf("%d\t",temp->data);
temp=temp->prev;
}
printf("\n");
}

int main()
{
int g;
create();
printf("Enter your choice \n1:insertion at begining\n2:insertion at ending\n3:insertion at specific position\n4:deletion at begining\n5:deletion at ending\n6:deletion at specific position\n7:just display\n8:count and display\n9:print in reverse way\n");
scanf("%d",&g);
switch(g)
{
case 1:insert_beg();
display();
break;
case 2:insert_end();
display();
break;
case 3:specific_insert();
display();
break;
case 4:delete_beg();
display();
break;
case 5:delete_end();
display();
break;
case 6:specific_delete();
display();
break;
case 7:display();
break;
case 8:count();
display();
break;
case 9:reverse();
break;
default:printf("Enter only given choices\n");
}
}